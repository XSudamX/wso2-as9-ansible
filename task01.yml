- name: Create 2 GCP instances
  hosts: localhost
  gather_facts: no
  vars:
      gcp_project: teak-kit-318419
      gcp_cred_kind: serviceaccount
      gcp_cred_file: /home/Umahasu/my-ansible/teak-kit-318419-2f7c0eb80cc4.json
      zone: "us-central1-a"
      region: "us-central1"

  tasks:
   - name: Create Disk 1
     gcp_compute_disk:
         name: 'disk-instance'
         size_gb: 30
         source_image: 'projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: disk1
   - name: Create Address 1
     gcp_compute_address:
         name: 'address-instance'
         region: "{{ region }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: address1
   - name: Create Instance 1
     gcp_compute_instance:
         state: present
         name: ansible-apache-01
         machine_type: n1-standard-1
         disks:
           - auto_delete: true
             boot: true
             source: "{{ disk1 }}"
         network_interfaces:
             - network: null 
               access_configs:
                 - name: 'External NAT'
                   nat_ip: "{{ address1 }}"
                   type: 'ONE_TO_ONE_NAT'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
     register: instance1

   - name: Wait for SSH to come up
     wait_for: host={{ address1.address1 }} port=22 delay=10 timeout=60

   - name: Add host to groupname
     add_host: hostname={{ address1.address1 }} groupname=new_instances


   # Instance 02
   - name: Create Disk 2
     gcp_compute_disk:
         name: 'disk-instance'
         size_gb: 30
         source_image: 'projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: disk2
   - name: Create Address 2
     gcp_compute_address:
         name: 'address-instance'
         region: "{{ region }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
         state: present
     register: address2
   - name: Create Instance 2
     gcp_compute_instance:
         state: present
         name: ansible-apache-02
         machine_type: n1-standard-1
         disks:
           - auto_delete: true
             boot: true
             source: "{{ disk2 }}"
         network_interfaces:
             - network: null 
               access_configs:
                 - name: 'External NAT'
                   nat_ip: "{{ address2 }}"
                   type: 'ONE_TO_ONE_NAT'
         zone: "{{ zone }}"
         project: "{{ gcp_project }}"
         auth_kind: "{{ gcp_cred_kind }}"
         service_account_file: "{{ gcp_cred_file }}"
         scopes:
           - https://www.googleapis.com/auth/compute
     register: instance2
   - name: Wait for SSH to come up
     wait_for: host={{ address2.address2 }} port=22 delay=10 timeout=60
   - name: Add host to groupname
     add_host: hostname={{ address2.address2 }} groupname=new_instances


- name: Install apache on both instances
  hosts: new_instances
  become: True
  tasks:
    - name: Run apt-get update
      command: apt-get update
    - name: Install latest version of Apache
      apt: name=apache2 update_cache=yes state=latest
    - name: "UFW firewall allow HTTP on port 80"
      ufw:
        rule: allow
        port: "80"
        proto: tcp


- name: Deploy webpage on instance 1
  hosts: {{ address1 }}
  tasks:
    - name: Copy Index File 1
      copy: src=.apache-html/index.htm dest=/var/www/html/index.html
    - name: Restart Apache
      command: systemctl restart apache2

- name: Deploy webpage on instance 2
  hosts: {{ address2 }}
  tasks:
    - name: Copy Index File 2
      copy: src=.apache-html/index.html dest=/var/www/html/index.html
    - name: Restart Apache
      command: systemctl restart apache2